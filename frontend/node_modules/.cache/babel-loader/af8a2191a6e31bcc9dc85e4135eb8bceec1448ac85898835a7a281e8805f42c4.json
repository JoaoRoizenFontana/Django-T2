{"ast":null,"code":"var _jsxFileName = \"/home/joao/repos/frontend/src/pages/NotePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = ({\n  match\n}) => {\n  _s();\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    try {\n      let response = await fetch(`/api/notes/${noteId}/`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      let data = await response.json();\n      console.log(data); // Verifique os dados recebidos no console\n      setNote(data);\n    } catch (error) {\n      console.error('Error fetching note:', error);\n    }\n  };\n\n  // Renderizando condicionalmente com base em se a nota está carregada\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: note ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotePage","match","_s","noteId","params","id","note","setNote","getNote","response","fetch","ok","Error","status","data","json","console","log","error","children","body","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/joao/repos/frontend/src/pages/NotePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface MatchParams {\n  id: string;\n}\n\nconst NotePage: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  let noteId = match.params.id;\n  let [note, setNote] = useState<any>(null);\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    try {\n      let response = await fetch(`/api/notes/${noteId}/`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      let data = await response.json();\n      console.log(data); // Verifique os dados recebidos no console\n      setNote(data);\n    } catch (error) {\n      console.error('Error fetching note:', error);\n    }\n  };\n  \n\n  // Renderizando condicionalmente com base em se a nota está carregada\n  return (\n    <div>\n      {note ? (\n        <h1>{note.body}</h1>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default NotePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnD,MAAMC,QAAoD,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1E,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE;EAC5B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAM,IAAI,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACdW,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAIK,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaP,MAAO,GAAE,CAAC;MACnD,IAAI,CAACM,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC3D;MACA,IAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;MACnBP,OAAO,CAACO,IAAI,CAAC;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAGD;EACA,oBACEnB,OAAA;IAAAoB,QAAA,EACGb,IAAI,gBACHP,OAAA;MAAAoB,QAAA,EAAKb,IAAI,CAACc;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEpBzB,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCIF,QAAoD;AAAAyB,EAAA,GAApDzB,QAAoD;AAmC1D,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}