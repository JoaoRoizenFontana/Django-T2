{"ast":null,"code":"var _jsxFileName = \"/home/joao/repos/frontend/src/pages/NotePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = ({\n  match\n}) => {\n  _s();\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let updateNote = async () => {\n    fetch(`/api/notes/${noteId}/update/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","match","_s","noteId","params","id","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["/home/joao/repos/frontend/src/pages/NotePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from \"../assets/arrow-left.svg\";\n\ninterface Note {\n  body: string;\n}\n\ninterface MatchParams {\n  id: string;\n}\n\nconst NotePage: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n  let noteId = match.params.id;\n  let [note, setNote] = useState<Note | null>(null);\n\n\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n\n  useEffect(() => {\n    getNote()\n  },[noteId])\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${noteId}/update/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    })\n  }\n\n  return (\n    <div className='note'>\n      <div className='note-header'>\n        <h3>\n          <Link to=\"/\">\n            <ArrowLeft />\n          </Link>\n        </h3>\n      </div>\n      <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})}} defaultValue={note?.body}></textarea>\n    </div>\n  );\n};\n\nexport default NotePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvE,MAAMC,QAAoD,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1E,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE;EAC5B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EAGjD,IAAIe,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaP,MAAO,EAAC,CAAC;IAClD,IAAIQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,OAAO,CAACI,IAAI,CAAC;EACf,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdc,OAAO,CAAC,CAAC;EACX,CAAC,EAAC,CAACL,MAAM,CAAC,CAAC;EAEX,IAAIU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BH,KAAK,CAAE,cAAaP,MAAO,UAAS,EAAE;MACpCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC3B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEP,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBrB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BrB,OAAA;QAAAqB,QAAA,eACErB,OAAA,CAACJ,IAAI;UAAC0B,EAAE,EAAC,GAAG;UAAAD,QAAA,eACVrB,OAAA,CAACF,SAAS;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACN1B,OAAA;MAAU2B,QAAQ,EAAGC,CAAC,IAAK;QAACpB,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAE,MAAM,EAACqB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA,CAAE;MAACC,YAAY,EAAExB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1G,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCIF,QAAoD;AAAA+B,EAAA,GAApD/B,QAAoD;AAuC1D,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}